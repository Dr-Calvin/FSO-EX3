{"version":3,"sources":["Persons.js","PersonForm.js","services/phoneService.js","Filter.js","App.js","index.js"],"names":["Persons","persons","deleteEntry","map","person","name","number","onClick","id","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","baseUrl","phoneService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deleteField","delete","Filter","newNameFilter","handleNameFilterChange","App","useState","setPersons","setNewName","setNewNumber","setNewNameFilter","display","setDisplay","errorMessage","setErrorMessage","errorDelete","setErrorDelete","useEffect","Notification","message","className","resetFields","personsC","ErrDelete","event","target","disp","filter","p","toLowerCase","includes","preventDefault","personObject","currentNameList","alert","updateeIndex","indexOf","updatee","returnedEntry","personsCopy","setTimeout","concat","window","confirm","catch","error","deleteeIndex","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4423c0b.chunk.js","sourcesContent":["const Persons = ({ persons, deleteEntry }) => {\n  return (\n    <div>\n      <ul>\n        {persons.map((person) => (\n          <li key={person.id}>\n            {person.name} {person.number} <button onClick={() => deleteEntry(person.name,person.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Persons\n","const PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => {\n    return response.data;\n  });\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteField = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst phoneService = { getAll, create, update, deleteField };\n\nexport default phoneService;\n","const Filter = ({ newNameFilter, handleNameFilterChange }) => {\n  return (\n    <div>\n      <input value={newNameFilter} onChange={handleNameFilterChange}></input>\n    </div>\n  );\n};\n\nexport default Filter\n","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./Persons\";\nimport PersonForm from \"./PersonForm\";\nimport phoneService from \"./services/phoneService\";\nimport Filter from \"./Filter\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newNameFilter, setNewNameFilter] = useState(\"\");\n  const [display, setDisplay] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [errorDelete, setErrorDelete] = useState(\"\");\n\n  useEffect(() => {\n    phoneService.getAll().then((response) => {\n      setPersons(response);\n      setDisplay(response);\n    });\n  }, []);\n\n  const Notification = ({ message }) => {\n    if (message === null) return null;\n    return <div className=\"error\">{message}</div>;\n  };\n\n  const resetFields = (personsC) => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n    setNewNameFilter(\"\");\n    setDisplay([...personsC]);\n  };\n\n  const deleteEntry = (name, id) => {\n    if (window.confirm(`Do you really want to Delete ${name}?`))\n      phoneService\n        .deleteField(id)\n        .catch((error) => {\n          setErrorDelete(\n            `The person you're trying to delete (${name}) has already been deleted from the server`\n          );\n          setTimeout(() => {\n            setErrorDelete(null);\n          }, 5000);\n        })\n        .then(() => {\n          let currentIDList = persons.map((person) => person.id);\n          const deleteeIndex = currentIDList.indexOf(id);\n          const personsCopy = persons;\n          personsCopy.splice(deleteeIndex, 1);\n          setPersons(personsCopy);\n          resetFields(personsCopy);\n        });\n  };\n\n  const ErrDelete = ({ message }) => {\n    return <div className=\"errDel\">{message}</div>;\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    let currentNameList = persons.map((person) => person.name);\n    if (!currentNameList.includes(personObject.name)) {\n      phoneService.create(personObject).then((response) => {\n        setErrorMessage(`${response.name} was added to phonebook`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setPersons(persons.concat(response));\n        resetFields(persons.concat(response));\n      });\n    } else {\n      alert(\n        `${personObject.name} is already in the phonebook, updating phone number...`\n      );\n      const updateeIndex = currentNameList.indexOf(personObject.name);\n      const updatee = persons[updateeIndex];\n      phoneService.update(updatee.id, personObject).then((returnedEntry) => {\n        const personsCopy = persons;\n        personsCopy[updateeIndex] = returnedEntry;\n        setPersons(personsCopy);\n        resetFields(personsCopy);\n      });\n    }\n  };\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleNameFilterChange = (event) => {\n    setNewNameFilter(event.target.value);\n    let disp = persons.filter((p) =>\n      p.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    setDisplay(disp);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      filter shown with\n      <Filter\n        newNameFilter={newNameFilter}\n        handleNameFilterChange={handleNameFilterChange}\n      />\n      <h2>Add a new</h2>\n      <Notification message={errorMessage} />\n      <ErrDelete message={errorDelete} />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={display} deleteEntry={deleteEntry} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}